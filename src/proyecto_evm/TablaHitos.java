/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto_evm;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class TablaHitos extends javax.swing.JFrame {
    private final GestorProyecto gestorProyectos;
    //Este es el nombre que se selecciono en la tabla anterior
    private String nombreProyecto;
    /**
     * Creates new form TablaHitos
     */
    public TablaHitos(GestorProyecto gestorProyectos, String nombre) {
        this.gestorProyectos = gestorProyectos;
        this.nombreProyecto = nombre;
        initComponents();
        this.setLocationRelativeTo(null);
        inicializarTabla();
        configurarTabla();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textoPV = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textoAC = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textoEV = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHitos = new javax.swing.JTable();
        botonAgregar = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonRegresar = new javax.swing.JButton();
        botonFinalizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("PV:");

        jLabel2.setText("AC:");

        jLabel3.setText("EV");

        tablaHitos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hito", "PV", "AC", "EV"
            }
        ));
        jScrollPane1.setViewportView(tablaHitos);

        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonRegresar.setText("Regresar");
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });

        botonFinalizar.setText("Finalizar");
        botonFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFinalizarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 255));
        jLabel4.setText("Valores de los Hitos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonModificar))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(textoPV, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(textoAC, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(textoEV, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(botonRegresar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonFinalizar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel4)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textoPV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(textoAC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(textoEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregar)
                    .addComponent(botonModificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonRegresar)
                    .addComponent(botonFinalizar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void inicializarTabla() {
        actualizarTabla(nombreProyecto);
    }

    private void actualizarTabla(String nombreProyecto) {
        Proyecto proyecto = gestorProyectos.obtenerProyectoPorNombre(nombreProyecto);
        if (proyecto != null) {
            List<Hito> hitos = proyecto.getHitos();
            DefaultTableModel model = (DefaultTableModel) tablaHitos.getModel();
            model.setRowCount(0); // Limpiar la tabla antes de agregar nuevos datos

            for (Hito hito : hitos) {
                Object[] rowData = {hitos.indexOf(hito) + 1, hito.getPV(), hito.getAC(), hito.getEV()};
                model.addRow(rowData);
            }
        }
    }
        private void configurarTabla() {
        tablaHitos.setDefaultEditor(Object.class, null); // Hace que todas las celdas no sean editables

        // Desactiva la reorganización de columnas
        tablaHitos.getTableHeader().setReorderingAllowed(false);
    }

   int i=0;
    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed

        try {
            Proyecto proyecto = gestorProyectos.obtenerProyectoPorNombre(nombreProyecto);

            if (proyecto == null) {
                JOptionPane.showMessageDialog(null, "El proyecto no existe");
                return;
            }

            if (i >= proyecto.getNumHitos()) {
                JOptionPane.showMessageDialog(null, "El límite de Hitos se ha alcanzado");
                return;
            }

            boolean prorrateado = proyecto.getProrrateado();
            float PV = 0, AC, EV;

            if (prorrateado) {
                if (!textoAC.getText().isEmpty() && !textoEV.getText().isEmpty() ) {
                    if (proyecto.getHitos().size() == proyecto.getNumHitos() ){
                        JOptionPane.showMessageDialog(null, "No se pueden agregar más hitos");
                        return;
                    }
                    AC = Float.parseFloat(textoAC.getText());
                    EV = Float.parseFloat(textoEV.getText());

                    if (AC <= 0 || EV <= 0) {
                        JOptionPane.showMessageDialog(null, "Los valores deben ser números mayores que 0");
                        return;
                    }

                    // En proyectos prorrateados, el PV se calcula automáticamente
                    if (!textoPV.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "El proyecto prorrateado no necesita llenar el campo PV");
                    }

                    PV = proyecto.getBAC() / proyecto.getNumHitos();
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, complete los campos AC y EV");
                    return;
                }
            } else {
                if (proyecto.calcularPVAcumulado() < proyecto.getBAC()) {
                    PV = Float.parseFloat(textoPV.getText());
                    AC = Float.parseFloat(textoAC.getText());
                    EV = Float.parseFloat(textoEV.getText());

                    if (PV <= 0 || AC <= 0 || EV <= 0) {
                        JOptionPane.showMessageDialog(null, "Los valores deben ser números mayores que 0");
                        return;
                    }

                    // Verificar si es el último hito y el PV acumulado es igual al BAC
                    if (proyecto.getHitos().size() + 1 == proyecto.getNumHitos() && proyecto.getBAC() != proyecto.calcularPVAcumulado() + PV) {
                        JOptionPane.showMessageDialog(null, "El PV acumulado debe ser igual al BAC en el último hito, se necesita: "
                                + (proyecto.getBAC() - proyecto.calcularPVAcumulado()));
                        return;
                    }

                    // Verificar si el PV acumulado después de agregar el nuevo hito no excede el BAC
                    if (proyecto.calcularPVAcumulado() + PV >= proyecto.getBAC()
                            && proyecto.getHitos().size() + 1 < proyecto.getNumHitos()) {
                        JOptionPane.showMessageDialog(null, "El PV acumulado no puede ser mayor o igual que el BAC");
                        return; // Salir del método si hay un error
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El límite de Hitos se ha alcanzado");
                    return;
                }
            }

            proyecto.agregarHito(new Hito(PV, AC, EV));
            actualizarTabla(nombreProyecto);
            i++;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Los datos deben ser números válidos", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al agregar el hito", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_botonAgregarActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        try {
            Proyecto proyecto = gestorProyectos.obtenerProyectoPorNombre(nombreProyecto);

            if (proyecto != null) {
                int numeroHito = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el número de hito que desea modificar: "));
                float nuevoPV;
                float nuevoAC;
                float nuevoEV;
                if (proyecto.getProrrateado()){
                    nuevoPV = proyecto.getBAC()/proyecto.getNumHitos();
                    nuevoAC = Float.parseFloat(textoAC.getText());
                    nuevoEV = Float.parseFloat(textoEV.getText());
                }else{
                    nuevoPV = Float.parseFloat(textoPV.getText());
                    nuevoAC = Float.parseFloat(textoAC.getText());
                    nuevoEV = Float.parseFloat(textoEV.getText());   
          
                }
        

                boolean exito = gestorProyectos.modificarHito(nombreProyecto, numeroHito, nuevoPV, nuevoAC, nuevoEV);

                if (exito) {
                    JOptionPane.showMessageDialog(null, "Hito modificado exitosamente.");
                    actualizarTabla(nombreProyecto);
                } else {
                    JOptionPane.showMessageDialog(null, "Error al modificar el hito.");
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error  " , "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al modificar el hito" , "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_botonModificarActionPerformed

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarActionPerformed
        Proyecto proyecto = gestorProyectos.obtenerProyectoPorNombre(nombreProyecto);

        if(! proyecto.getProrrateado() && proyecto.getHitos().size()==proyecto.getNumHitos() && proyecto.calcularPVAcumulado()!=proyecto.getBAC()){
            JOptionPane.showMessageDialog(null, "El PV total debe ser igual al BAC:  "+ proyecto.getBAC() );

            return;
        }
            
        Ventana_crear newframe = new Ventana_crear(gestorProyectos);
        newframe.setVisible(true);
        this.dispose(); 
        
    }//GEN-LAST:event_botonRegresarActionPerformed

    private void botonFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFinalizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonFinalizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TablaHitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TablaHitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TablaHitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TablaHitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        GestorProyecto gestorProyectos = new GestorProyecto(); // Crea una nueva instancia del gestor de proyectos
        String nombreProyecto = "Nombre del Proyecto"; // Reemplaza con el nombre real del proyecto
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TablaHitos(gestorProyectos, nombreProyecto).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonFinalizar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaHitos;
    private javax.swing.JTextField textoAC;
    private javax.swing.JTextField textoEV;
    private javax.swing.JTextField textoPV;
    // End of variables declaration//GEN-END:variables
}
